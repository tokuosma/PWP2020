FORMAT: 1A
HOST: https://localhost:5000/

# ClimateCook API

ClimateCook is a simple API allowing consumers to browse recipes and get an estimate
of the carbon footprint for each recipe.

# Group Link Relations

This section described custom link relations defined in this API. These are not resources. The API also uses 
[IANA link relations](http://www.iana.org/assignments/link-relations/link-relations.xhtml) where applicable. Custom link relations are CURIEs that use the clicook: prefix. 

## add-category-food-item
Add a food item to a specific category
## add-category-recipe
Add a recipe to a specific category
## add-food-item
Add a new food item to collection
## add-food-item-category
Add a new food item category to collection
## add-food-item-equivalent
Add new food item equivalent for food item
## add-ingredient
Add a new ingredient to a recipe
## add-recipe
Add a new recipe to recipe collection
## add-recipe-category
Add a new recipe category to collection using.
## category-food-items
Go to collection of food items in a specific category
## category-recipes
Go to a collection of recipes in a specific category
## delete
Delete the associated resource
## food-item
Move to specific food item
## food-item-categories-all
Go to food item category collection
## food-item-equivalent
Move to specific food item equivalent
## food-items-all
Go to food item collection
## food-items-with-equivalents
Go to a collection that returns the food items combined with their equivalents
## recipe-categories-all
Move to recipe category collection
## recipes-all
Go to the recipe collection

# Group Profiles

This section includes resource profiles which provide semantic descriptions for the attributes of each resource, as well as the list of controls (by link relation) available from that resource.

## Recipe Profile

### Link Relations

This section lists all possible link relations associated with recipes; not all of them are necessarily present on each resource type. The following link relations from the clicook namespace are used:

 * [add-category-recipe](reference/link-relations/add-category-recipe)
 * [add-ingredient](reference/link-relations/add-ingredient)
 * [add-recipe](reference/link-relations/add-recipe)
 * [category-recipes](reference/link-relations/category-recipes)
 * [food-items-all](reference/link-relations/food-items-all)
 * [delete](reference/link-relations/delete)
 * [recipe-categories-all](reference/link-relations/recipe-categories-all)
 * [recipes-all](reference/link-relations/recipes-all)
 
The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * collection
 * edit
 * item
 * up
 * profile
 * self
 
### Semantic Descriptors

#### Data Type Recipe

 * `id`: Unique identifier givent to the recipe, used to address recipe resources.
 * `recipe_category_id`: Unique identifier of the category the recipe belongs to.
 * `name`: Name of the recipe.
  
 **Additional properties**
 * `emissions_total`: Calculated sum of CO2 emissions of the recipe ingredients. 
 

## Recipe Category Profile

### Link Relations

This section lists all possible link relations associated with recipe categories; not all of them are necessarily present on each resource type. The following link relations from the clicook namespace are used:

 * [add-recipe-category](reference/link-relations/add-recipe-category)
 * [category-recipes](reference/link-relations/category-recipes)
 * [delete](reference/link-relations/delete)
 * [recipes-all](reference/link-relations/recipes-all)
 
The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * collection
 * edit
 * item
 * profile
 * self
 
### Semantic Descriptors

#### Data Type Recipe Category

 * `id`: Unique identifier givent to the recipe category, used to address recipe category resources.
 * `name`: Name of the category.

## Ingredient Profile

### Link Relations

This section lists all possible link relations associated with ingredients. The following link relations from the clicook namespace are used:

 * [delete](reference/link-relations/delete)
 * [food-item](reference/link-relations/food-item)
 * [food-item-equivalent](reference/link-relations/food-item-equivalent)
 * [recipes-all](reference/link-relations/recipes-all)
 
The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * edit
 * item
 * profile
 * up
 * self
 
### Semantic Descriptors

#### Data Type Ingredient

 * `id`: Unique identifier givent to the ingredient, used to address ingredient resources.
 * `food_item_category_id`: Identifier of the recipe the ingredient belongs to. Mandatory
 * `food_item_id`: Identifier of the connected food item. Mandatory
 * `food_item_equivalent_id` Identifier of the connected food item equivalent. Mandatory
 * `quantity` Amount of ingredient used in recipe
 
 **Additional properties**
 
 * `emissions` Calculated amount of emissions generated by the ingredient.
 
## Food Item Profile

### Link Relations

This section lists all possible link relations associated with food items; not all of them are necessarily present on each resource type. The following link relations from the clicook namespace are used:

 * [add-category-food-item](reference/link-relations/add-category-food-item)
 * [add-food-item](reference/link-relations/add-food-item)
 * [add-food-item-equivalent](reference/link-relations/add-food-item-equivalent)
 * [category-food-items](reference/link-relations/category-food-items)
 * [delete](reference/link-relations/delete)
 * [food-item-categories-all](reference/link-relations/food-item)
 
The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * collection
 * edit
 * item
 * profile
 * up
 * self
 
### Semantic Descriptors

#### Data Type Food Item
 
 * `id`: Unique identifier givent to the ingredient, used to address ingredient resources. 
 * `food_item_category_id`: Identifier of the category the food item belongs to. Mandatory
 * `name`: Name of the food item. Mandatory
 * `emission_per_kg` Amount of CO2 (kg) emissions generated per kilogram of the food item. Mandatory
 * `vegan` Value indicates if the product is vegan diet compatible
 * `organic` Value indicates if the product is organically produced
 * `domestic` Value indicates if the product is domestically produced
 
## Food Item Equivalent Profile

### Link Relations

This section lists all possible link relations associated with food item equivalents; not all of them are necessarily present on each resource type. The following link relations from the clicook namespace are used:

 * [delete](reference/link-relations/delete)

The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * edit
 * profile
 * up

### Semantic Descriptors

#### Data Type Food Item Equivalent

 * `id`: Unique identifier givent to the food item equivalent, used to address food-item-equivalent resources. 
 * `food_item_id`: Identifier of the food item the food item equivalent belongs to. Mandatory
 * `unit_type`: Unit amount type (eg. tbs, kg, ml, etc.) . Mandatory
 * `conversion_factor`: Float value to convert the unit amount type to kilograms of product. Mandatory
 
## Food Item Category Profile

### Link Relations

The following link relations from the clicook namespace are used:

 * [add-food-item-category](reference/link-relations/add-food-item-category)
 * [delete](reference/link-relations/delete)
 * [food-items-all](reference/link-relations/food-items-all)

The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * item
 * collection
 * edit
 * profile
### Semantic Descriptors

#### Data Type Food Item Category

 * `id`: Unique identifier givent to the food item category, used to address food item category resources. 
 * `name`: Name of the category. Mandatory
 
## Error Profile

Profile definition for all errors returned by the API. See [Mason error control](https://github.com/JornWildt/Mason/blob/master/Documentation/Mason-draft-2.md#property-name-error) for more information about errors.

+ Attributes

    + resource_url (string, required) - URI of the resource the error was generated from. 
 
  
# Group Entry

This group contains the entry point of the API

## Entry Point [/api/]

### Get entry point [GET]

Get the API entry point

+ Request

    + Headers
    
            Accept: application/vnd.mason+json
            
+ Response 200 (application/vnd.mason+json)

    + Body
    
            {
                "@namespaces": {
                    "clicook": {
                        "name": "/climatecook/link-relations#"
                    }
                },
                "@controls": {
                    "clicook:recipes-all": {
                        "href": "/api/recipes"
                    },
                    "clicook:recipe-categories-all": {
                        "href": "/api/recipe_categories"
                    },
                    "clicook:food-items-all":{
                        "href": "/api/food-items"
                    },
                    "clicook:food-items-with-equivalents": {
                        "href": "/api/food-item-equivalents"
                    },
                    "clicook:food-categories-all": {
                        "href": "/api/food-item-categories"
                    }
                    
                }
            }

# Group Recipes

All of these resources use the [Recipe Profile](reference/profiles/recipe-profile). In error scenarios [Error Profile](reference/profiles/error-profile) is used.

## Recipe Collection [/api/recipes/?name={name}]

A list of all albums known to the API. This collection can be sorted using the sortby query parameter. For each album only artist name and title is included, more information can be found by following the `self` relation of each album. Albums cannot be directly added to this collection, it only supports GET.

+ Parameters

    + name (string, optional) - Name to use for filtering results
    
### List all recipes [GET]
Get a list of all recipes
+ Relation: recipes-all

+ Parameters
    + name (string, optional) - The name string used to filter search results.
        
+ Request

    + Headers
    
            Accept: application/vnd.mason+json
    

+ Response 200 (application/vnd.mason+json)
    
    + Body

            {
                "@namespaces": {
                    "clicook": {
                        "name": "/climatecook/link-relations#"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/api/recipes/?{name}",
                        "title": "All recipes",
                        "isHrefTemplate": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "Name to use for filtering results",
                                    "type": "string",
                                    "default": "",
                                }
                            },
                            "required": []
                        }
                    },
                    "clicook:recipe-categories-all": {
                        "href": "/api/recipe-categories",
                        "title": "All recipe categories"
                    },
                    "clicook:add-recipe": {
                        "href": "/api/recipes",
                        "title": "Add a new recipe to the collections",
                        "encoding": "json",
                        "method": "POST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "Recipe name",
                                    "type": "string"
                                },
                                "recipe_category_id": {
                                    "description": "Id of the recipe category",
                                    "type": "integer"
                                }
                            },
                            "required": ["name"]
                        }
                    
                },
                "items": [
                    {
                        "id": 123,
                        "recipe_category_id": 1
                        "name": "Macaronbox",
                        "@controls": {
                            "self": {
                                "href": "/api/recipes/123"
                            }, 
                            "profile": {
                                "href": "/profiles/recipe/"
                            }
                        },
                    }, 
                    {
                        "id": 1234,
                        "recipe_category_id": 1,
                        "name": "Macaronbox with sausage", 
                        "@controls": {
                            "self": {
                                "href": "/api/recipes/1234"
                            },
                            "profile": {
                                "href": "/profiles/recipe/"
                            }
                        }
                    }
                ]
            }